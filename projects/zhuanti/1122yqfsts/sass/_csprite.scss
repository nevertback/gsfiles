// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$comm-tit-name: 'comm-tit';
$comm-tit-x: 0px;
$comm-tit-y: 0px;
$comm-tit-offset-x: 0px;
$comm-tit-offset-y: 0px;
$comm-tit-width: 1219px;
$comm-tit-height: 45px;
$comm-tit-total-width: 1219px;
$comm-tit-total-height: 659px;
$comm-tit-image: '../ztimages/csprite.png';
$comm-tit: (0px, 0px, 0px, 0px, 1219px, 45px, 1219px, 659px, '../ztimages/csprite.png', 'comm-tit', );
$fx-bg-name: 'fx-bg';
$fx-bg-x: 0px;
$fx-bg-y: 371px;
$fx-bg-offset-x: 0px;
$fx-bg-offset-y: -371px;
$fx-bg-width: 151px;
$fx-bg-height: 288px;
$fx-bg-total-width: 1219px;
$fx-bg-total-height: 659px;
$fx-bg-image: '../ztimages/csprite.png';
$fx-bg: (0px, 371px, 0px, -371px, 151px, 288px, 1219px, 659px, '../ztimages/csprite.png', 'fx-bg', );
$s1-btn1-h-name: 's1-btn1-h';
$s1-btn1-h-x: 397px;
$s1-btn1-h-y: 450px;
$s1-btn1-h-offset-x: -397px;
$s1-btn1-h-offset-y: -450px;
$s1-btn1-h-width: 230px;
$s1-btn1-h-height: 70px;
$s1-btn1-h-total-width: 1219px;
$s1-btn1-h-total-height: 659px;
$s1-btn1-h-image: '../ztimages/csprite.png';
$s1-btn1-h: (397px, 450px, -397px, -450px, 230px, 70px, 1219px, 659px, '../ztimages/csprite.png', 's1-btn1-h', );
$s1-btn1-name: 's1-btn1';
$s1-btn1-x: 159px;
$s1-btn1-y: 450px;
$s1-btn1-offset-x: -159px;
$s1-btn1-offset-y: -450px;
$s1-btn1-width: 230px;
$s1-btn1-height: 70px;
$s1-btn1-total-width: 1219px;
$s1-btn1-total-height: 659px;
$s1-btn1-image: '../ztimages/csprite.png';
$s1-btn1: (159px, 450px, -159px, -450px, 230px, 70px, 1219px, 659px, '../ztimages/csprite.png', 's1-btn1', );
$s1-btn2-h-name: 's1-btn2-h';
$s1-btn2-h-x: 397px;
$s1-btn2-h-y: 371px;
$s1-btn2-h-offset-x: -397px;
$s1-btn2-h-offset-y: -371px;
$s1-btn2-h-width: 230px;
$s1-btn2-h-height: 71px;
$s1-btn2-h-total-width: 1219px;
$s1-btn2-h-total-height: 659px;
$s1-btn2-h-image: '../ztimages/csprite.png';
$s1-btn2-h: (397px, 371px, -397px, -371px, 230px, 71px, 1219px, 659px, '../ztimages/csprite.png', 's1-btn2-h', );
$s1-btn2-name: 's1-btn2';
$s1-btn2-x: 159px;
$s1-btn2-y: 371px;
$s1-btn2-offset-x: -159px;
$s1-btn2-offset-y: -371px;
$s1-btn2-width: 230px;
$s1-btn2-height: 71px;
$s1-btn2-total-width: 1219px;
$s1-btn2-total-height: 659px;
$s1-btn2-image: '../ztimages/csprite.png';
$s1-btn2: (159px, 371px, -159px, -371px, 230px, 71px, 1219px, 659px, '../ztimages/csprite.png', 's1-btn2', );
$s1-btn3-h-name: 's1-btn3-h';
$s1-btn3-h-x: 873px;
$s1-btn3-h-y: 371px;
$s1-btn3-h-offset-x: -873px;
$s1-btn3-h-offset-y: -371px;
$s1-btn3-h-width: 230px;
$s1-btn3-h-height: 70px;
$s1-btn3-h-total-width: 1219px;
$s1-btn3-h-total-height: 659px;
$s1-btn3-h-image: '../ztimages/csprite.png';
$s1-btn3-h: (873px, 371px, -873px, -371px, 230px, 70px, 1219px, 659px, '../ztimages/csprite.png', 's1-btn3-h', );
$s1-btn3-name: 's1-btn3';
$s1-btn3-x: 635px;
$s1-btn3-y: 371px;
$s1-btn3-offset-x: -635px;
$s1-btn3-offset-y: -371px;
$s1-btn3-width: 230px;
$s1-btn3-height: 70px;
$s1-btn3-total-width: 1219px;
$s1-btn3-total-height: 659px;
$s1-btn3-image: '../ztimages/csprite.png';
$s1-btn3: (635px, 371px, -635px, -371px, 230px, 70px, 1219px, 659px, '../ztimages/csprite.png', 's1-btn3', );
$s2-play-r-name: 's2-play-r';
$s2-play-r-x: 1111px;
$s2-play-r-y: 371px;
$s2-play-r-offset-x: -1111px;
$s2-play-r-offset-y: -371px;
$s2-play-r-width: 36px;
$s2-play-r-height: 54px;
$s2-play-r-total-width: 1219px;
$s2-play-r-total-height: 659px;
$s2-play-r-image: '../ztimages/csprite.png';
$s2-play-r: (1111px, 371px, -1111px, -371px, 36px, 54px, 1219px, 659px, '../ztimages/csprite.png', 's2-play-r', );
$s2-play-r1-name: 's2-play-r1';
$s2-play-r1-x: 294px;
$s2-play-r1-y: 528px;
$s2-play-r1-offset-x: -294px;
$s2-play-r1-offset-y: -528px;
$s2-play-r1-width: 100px;
$s2-play-r1-height: 101px;
$s2-play-r1-total-width: 1219px;
$s2-play-r1-total-height: 659px;
$s2-play-r1-image: '../ztimages/csprite.png';
$s2-play-r1: (294px, 528px, -294px, -528px, 100px, 101px, 1219px, 659px, '../ztimages/csprite.png', 's2-play-r1', );
$s2-play-r2-name: 's2-play-r2';
$s2-play-r2-x: 159px;
$s2-play-r2-y: 528px;
$s2-play-r2-offset-x: -159px;
$s2-play-r2-offset-y: -528px;
$s2-play-r2-width: 127px;
$s2-play-r2-height: 128px;
$s2-play-r2-total-width: 1219px;
$s2-play-r2-total-height: 659px;
$s2-play-r2-image: '../ztimages/csprite.png';
$s2-play-r2: (159px, 528px, -159px, -528px, 127px, 128px, 1219px, 659px, '../ztimages/csprite.png', 's2-play-r2', );
$s2-tit-name: 's2-tit';
$s2-tit-x: 0px;
$s2-tit-y: 318px;
$s2-tit-offset-x: 0px;
$s2-tit-offset-y: -318px;
$s2-tit-width: 1219px;
$s2-tit-height: 45px;
$s2-tit-total-width: 1219px;
$s2-tit-total-height: 659px;
$s2-tit-image: '../ztimages/csprite.png';
$s2-tit: (0px, 318px, 0px, -318px, 1219px, 45px, 1219px, 659px, '../ztimages/csprite.png', 's2-tit', );
$s3-tit-name: 's3-tit';
$s3-tit-x: 0px;
$s3-tit-y: 265px;
$s3-tit-offset-x: 0px;
$s3-tit-offset-y: -265px;
$s3-tit-width: 1219px;
$s3-tit-height: 45px;
$s3-tit-total-width: 1219px;
$s3-tit-total-height: 659px;
$s3-tit-image: '../ztimages/csprite.png';
$s3-tit: (0px, 265px, 0px, -265px, 1219px, 45px, 1219px, 659px, '../ztimages/csprite.png', 's3-tit', );
$s4-tit-name: 's4-tit';
$s4-tit-x: 0px;
$s4-tit-y: 212px;
$s4-tit-offset-x: 0px;
$s4-tit-offset-y: -212px;
$s4-tit-width: 1219px;
$s4-tit-height: 45px;
$s4-tit-total-width: 1219px;
$s4-tit-total-height: 659px;
$s4-tit-image: '../ztimages/csprite.png';
$s4-tit: (0px, 212px, 0px, -212px, 1219px, 45px, 1219px, 659px, '../ztimages/csprite.png', 's4-tit', );
$s5-tit-name: 's5-tit';
$s5-tit-x: 0px;
$s5-tit-y: 159px;
$s5-tit-offset-x: 0px;
$s5-tit-offset-y: -159px;
$s5-tit-width: 1219px;
$s5-tit-height: 45px;
$s5-tit-total-width: 1219px;
$s5-tit-total-height: 659px;
$s5-tit-image: '../ztimages/csprite.png';
$s5-tit: (0px, 159px, 0px, -159px, 1219px, 45px, 1219px, 659px, '../ztimages/csprite.png', 's5-tit', );
$s6-tit-name: 's6-tit';
$s6-tit-x: 0px;
$s6-tit-y: 106px;
$s6-tit-offset-x: 0px;
$s6-tit-offset-y: -106px;
$s6-tit-width: 1219px;
$s6-tit-height: 45px;
$s6-tit-total-width: 1219px;
$s6-tit-total-height: 659px;
$s6-tit-image: '../ztimages/csprite.png';
$s6-tit: (0px, 106px, 0px, -106px, 1219px, 45px, 1219px, 659px, '../ztimages/csprite.png', 's6-tit', );
$s7-tit-name: 's7-tit';
$s7-tit-x: 0px;
$s7-tit-y: 53px;
$s7-tit-offset-x: 0px;
$s7-tit-offset-y: -53px;
$s7-tit-width: 1219px;
$s7-tit-height: 45px;
$s7-tit-total-width: 1219px;
$s7-tit-total-height: 659px;
$s7-tit-image: '../ztimages/csprite.png';
$s7-tit: (0px, 53px, 0px, -53px, 1219px, 45px, 1219px, 659px, '../ztimages/csprite.png', 's7-tit', );
$spritesheet-width: 1219px;
$spritesheet-height: 659px;
$spritesheet-image: '../ztimages/csprite.png';
$spritesheet-sprites: ($comm-tit, $fx-bg, $s1-btn1-h, $s1-btn1, $s1-btn2-h, $s1-btn2, $s1-btn3-h, $s1-btn3, $s2-play-r, $s2-play-r1, $s2-play-r2, $s2-tit, $s3-tit, $s4-tit, $s5-tit, $s6-tit, $s7-tit, );
$spritesheet: (1219px, 659px, '../ztimages/csprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
