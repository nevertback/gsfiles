// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$close-h-name: 'close-h';
$close-h-x: 614px;
$close-h-y: 64px;
$close-h-offset-x: -614px;
$close-h-offset-y: -64px;
$close-h-width: 30px;
$close-h-height: 30px;
$close-h-total-width: 644px;
$close-h-total-height: 462px;
$close-h-image: '../ztimages/csprite.png';
$close-h: (614px, 64px, -614px, -64px, 30px, 30px, 644px, 462px, '../ztimages/csprite.png', 'close-h', );
$close-name: 'close';
$close-x: 576px;
$close-y: 64px;
$close-offset-x: -576px;
$close-offset-y: -64px;
$close-width: 30px;
$close-height: 30px;
$close-total-width: 644px;
$close-total-height: 462px;
$close-image: '../ztimages/csprite.png';
$close: (576px, 64px, -576px, -64px, 30px, 30px, 644px, 462px, '../ztimages/csprite.png', 'close', );
$fx-bg-name: 'fx-bg';
$fx-bg-x: 0px;
$fx-bg-y: 0px;
$fx-bg-offset-x: 0px;
$fx-bg-offset-y: 0px;
$fx-bg-width: 120px;
$fx-bg-height: 334px;
$fx-bg-total-width: 644px;
$fx-bg-total-height: 462px;
$fx-bg-image: '../ztimages/csprite.png';
$fx-bg: (0px, 0px, 0px, 0px, 120px, 334px, 644px, 462px, '../ztimages/csprite.png', 'fx-bg', );
$fx-btn-c-name: 'fx-btn-c';
$fx-btn-c-x: 472px;
$fx-btn-c-y: 276px;
$fx-btn-c-offset-x: -472px;
$fx-btn-c-offset-y: -276px;
$fx-btn-c-width: 112px;
$fx-btn-c-height: 30px;
$fx-btn-c-total-width: 644px;
$fx-btn-c-total-height: 462px;
$fx-btn-c-image: '../ztimages/csprite.png';
$fx-btn-c: (472px, 276px, -472px, -276px, 112px, 30px, 644px, 462px, '../ztimages/csprite.png', 'fx-btn-c', );
$logo-gf-name: 'logo-gf';
$logo-gf-x: 128px;
$logo-gf-y: 0px;
$logo-gf-offset-x: -128px;
$logo-gf-offset-y: 0px;
$logo-gf-width: 128px;
$logo-gf-height: 80px;
$logo-gf-total-width: 644px;
$logo-gf-total-height: 462px;
$logo-gf-image: '../ztimages/csprite.png';
$logo-gf: (128px, 0px, -128px, 0px, 128px, 80px, 644px, 462px, '../ztimages/csprite.png', 'logo-gf', );
$s1-btn1-h-name: 's1-btn1-h';
$s1-btn1-h-x: 472px;
$s1-btn1-h-y: 0px;
$s1-btn1-h-offset-x: -472px;
$s1-btn1-h-offset-y: 0px;
$s1-btn1-h-width: 172px;
$s1-btn1-h-height: 56px;
$s1-btn1-h-total-width: 644px;
$s1-btn1-h-total-height: 462px;
$s1-btn1-h-image: '../ztimages/csprite.png';
$s1-btn1-h: (472px, 0px, -472px, 0px, 172px, 56px, 644px, 462px, '../ztimages/csprite.png', 's1-btn1-h', );
$s1-btn1-name: 's1-btn1';
$s1-btn1-x: 264px;
$s1-btn1-y: 224px;
$s1-btn1-offset-x: -264px;
$s1-btn1-offset-y: -224px;
$s1-btn1-width: 172px;
$s1-btn1-height: 56px;
$s1-btn1-total-width: 644px;
$s1-btn1-total-height: 462px;
$s1-btn1-image: '../ztimages/csprite.png';
$s1-btn1: (264px, 224px, -264px, -224px, 172px, 56px, 644px, 462px, '../ztimages/csprite.png', 's1-btn1', );
$s1-btn2-h-name: 's1-btn2-h';
$s1-btn2-h-x: 0px;
$s1-btn2-h-y: 342px;
$s1-btn2-h-offset-x: 0px;
$s1-btn2-h-offset-y: -342px;
$s1-btn2-h-width: 172px;
$s1-btn2-h-height: 56px;
$s1-btn2-h-total-width: 644px;
$s1-btn2-h-total-height: 462px;
$s1-btn2-h-image: '../ztimages/csprite.png';
$s1-btn2-h: (0px, 342px, 0px, -342px, 172px, 56px, 644px, 462px, '../ztimages/csprite.png', 's1-btn2-h', );
$s1-btn2-name: 's1-btn2';
$s1-btn2-x: 180px;
$s1-btn2-y: 342px;
$s1-btn2-offset-x: -180px;
$s1-btn2-offset-y: -342px;
$s1-btn2-width: 172px;
$s1-btn2-height: 56px;
$s1-btn2-total-width: 644px;
$s1-btn2-total-height: 462px;
$s1-btn2-image: '../ztimages/csprite.png';
$s1-btn2: (180px, 342px, -180px, -342px, 172px, 56px, 644px, 462px, '../ztimages/csprite.png', 's1-btn2', );
$s1-btn3-h-name: 's1-btn3-h';
$s1-btn3-h-x: 0px;
$s1-btn3-h-y: 406px;
$s1-btn3-h-offset-x: 0px;
$s1-btn3-h-offset-y: -406px;
$s1-btn3-h-width: 172px;
$s1-btn3-h-height: 56px;
$s1-btn3-h-total-width: 644px;
$s1-btn3-h-total-height: 462px;
$s1-btn3-h-image: '../ztimages/csprite.png';
$s1-btn3-h: (0px, 406px, 0px, -406px, 172px, 56px, 644px, 462px, '../ztimages/csprite.png', 's1-btn3-h', );
$s1-btn3-name: 's1-btn3';
$s1-btn3-x: 180px;
$s1-btn3-y: 406px;
$s1-btn3-offset-x: -180px;
$s1-btn3-offset-y: -406px;
$s1-btn3-width: 172px;
$s1-btn3-height: 56px;
$s1-btn3-total-width: 644px;
$s1-btn3-total-height: 462px;
$s1-btn3-image: '../ztimages/csprite.png';
$s1-btn3: (180px, 406px, -180px, -406px, 172px, 56px, 644px, 462px, '../ztimages/csprite.png', 's1-btn3', );
$s2-play-h-name: 's2-play-h';
$s2-play-h-x: 472px;
$s2-play-h-y: 170px;
$s2-play-h-offset-x: -472px;
$s2-play-h-offset-y: -170px;
$s2-play-h-width: 96px;
$s2-play-h-height: 98px;
$s2-play-h-total-width: 644px;
$s2-play-h-total-height: 462px;
$s2-play-h-image: '../ztimages/csprite.png';
$s2-play-h: (472px, 170px, -472px, -170px, 96px, 98px, 644px, 462px, '../ztimages/csprite.png', 's2-play-h', );
$s2-play-name: 's2-play';
$s2-play-x: 472px;
$s2-play-y: 64px;
$s2-play-offset-x: -472px;
$s2-play-offset-y: -64px;
$s2-play-width: 96px;
$s2-play-height: 98px;
$s2-play-total-width: 644px;
$s2-play-total-height: 462px;
$s2-play-image: '../ztimages/csprite.png';
$s2-play: (472px, 64px, -472px, -64px, 96px, 98px, 644px, 462px, '../ztimages/csprite.png', 's2-play', );
$tn1-h-name: 'tn1-h';
$tn1-h-x: 264px;
$tn1-h-y: 168px;
$tn1-h-offset-x: -264px;
$tn1-h-offset-y: -168px;
$tn1-h-width: 200px;
$tn1-h-height: 48px;
$tn1-h-total-width: 644px;
$tn1-h-total-height: 462px;
$tn1-h-image: '../ztimages/csprite.png';
$tn1-h: (264px, 168px, -264px, -168px, 200px, 48px, 644px, 462px, '../ztimages/csprite.png', 'tn1-h', );
$tn1-name: 'tn1';
$tn1-x: 264px;
$tn1-y: 112px;
$tn1-offset-x: -264px;
$tn1-offset-y: -112px;
$tn1-width: 200px;
$tn1-height: 48px;
$tn1-total-width: 644px;
$tn1-total-height: 462px;
$tn1-image: '../ztimages/csprite.png';
$tn1: (264px, 112px, -264px, -112px, 200px, 48px, 644px, 462px, '../ztimages/csprite.png', 'tn1', );
$tn2-h-name: 'tn2-h';
$tn2-h-x: 264px;
$tn2-h-y: 56px;
$tn2-h-offset-x: -264px;
$tn2-h-offset-y: -56px;
$tn2-h-width: 200px;
$tn2-h-height: 48px;
$tn2-h-total-width: 644px;
$tn2-h-total-height: 462px;
$tn2-h-image: '../ztimages/csprite.png';
$tn2-h: (264px, 56px, -264px, -56px, 200px, 48px, 644px, 462px, '../ztimages/csprite.png', 'tn2-h', );
$tn2-name: 'tn2';
$tn2-x: 264px;
$tn2-y: 0px;
$tn2-offset-x: -264px;
$tn2-offset-y: 0px;
$tn2-width: 200px;
$tn2-height: 48px;
$tn2-total-width: 644px;
$tn2-total-height: 462px;
$tn2-image: '../ztimages/csprite.png';
$tn2: (264px, 0px, -264px, 0px, 200px, 48px, 644px, 462px, '../ztimages/csprite.png', 'tn2', );
$spritesheet-width: 644px;
$spritesheet-height: 462px;
$spritesheet-image: '../ztimages/csprite.png';
$spritesheet-sprites: ($close-h, $close, $fx-bg, $fx-btn-c, $logo-gf, $s1-btn1-h, $s1-btn1, $s1-btn2-h, $s1-btn2, $s1-btn3-h, $s1-btn3, $s2-play-h, $s2-play, $tn1-h, $tn1, $tn2-h, $tn2, );
$spritesheet: (644px, 462px, '../ztimages/csprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
