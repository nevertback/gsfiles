// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arr-l-h-name: 'arr-l-h';
$arr-l-h-x: 422px;
$arr-l-h-y: 86px;
$arr-l-h-offset-x: -422px;
$arr-l-h-offset-y: -86px;
$arr-l-h-width: 25px;
$arr-l-h-height: 50px;
$arr-l-h-total-width: 582px;
$arr-l-h-total-height: 332px;
$arr-l-h-image: '../ztimages/csprite.png';
$arr-l-h: (422px, 86px, -422px, -86px, 25px, 50px, 582px, 332px, '../ztimages/csprite.png', 'arr-l-h', );
$arr-l-name: 'arr-l';
$arr-l-x: 455px;
$arr-l-y: 86px;
$arr-l-offset-x: -455px;
$arr-l-offset-y: -86px;
$arr-l-width: 25px;
$arr-l-height: 50px;
$arr-l-total-width: 582px;
$arr-l-total-height: 332px;
$arr-l-image: '../ztimages/csprite.png';
$arr-l: (455px, 86px, -455px, -86px, 25px, 50px, 582px, 332px, '../ztimages/csprite.png', 'arr-l', );
$arr-r-h-name: 'arr-r-h';
$arr-r-h-x: 488px;
$arr-r-h-y: 86px;
$arr-r-h-offset-x: -488px;
$arr-r-h-offset-y: -86px;
$arr-r-h-width: 25px;
$arr-r-h-height: 50px;
$arr-r-h-total-width: 582px;
$arr-r-h-total-height: 332px;
$arr-r-h-image: '../ztimages/csprite.png';
$arr-r-h: (488px, 86px, -488px, -86px, 25px, 50px, 582px, 332px, '../ztimages/csprite.png', 'arr-r-h', );
$arr-r-name: 'arr-r';
$arr-r-x: 521px;
$arr-r-y: 86px;
$arr-r-offset-x: -521px;
$arr-r-offset-y: -86px;
$arr-r-width: 25px;
$arr-r-height: 50px;
$arr-r-total-width: 582px;
$arr-r-total-height: 332px;
$arr-r-image: '../ztimages/csprite.png';
$arr-r: (521px, 86px, -521px, -86px, 25px, 50px, 582px, 332px, '../ztimages/csprite.png', 'arr-r', );
$logo-gf-name: 'logo-gf';
$logo-gf-x: 422px;
$logo-gf-y: 0px;
$logo-gf-offset-x: -422px;
$logo-gf-offset-y: 0px;
$logo-gf-width: 160px;
$logo-gf-height: 78px;
$logo-gf-total-width: 582px;
$logo-gf-total-height: 332px;
$logo-gf-image: '../ztimages/csprite.png';
$logo-gf: (422px, 0px, -422px, 0px, 160px, 78px, 582px, 332px, '../ztimages/csprite.png', 'logo-gf', );
$s1-btn-h-name: 's1-btn-h';
$s1-btn-h-x: 0px;
$s1-btn-h-y: 0px;
$s1-btn-h-offset-x: 0px;
$s1-btn-h-offset-y: 0px;
$s1-btn-h-width: 266px;
$s1-btn-h-height: 86px;
$s1-btn-h-total-width: 582px;
$s1-btn-h-total-height: 332px;
$s1-btn-h-image: '../ztimages/csprite.png';
$s1-btn-h: (0px, 0px, 0px, 0px, 266px, 86px, 582px, 332px, '../ztimages/csprite.png', 's1-btn-h', );
$s1-btn-name: 's1-btn';
$s1-btn-x: 0px;
$s1-btn-y: 94px;
$s1-btn-offset-x: 0px;
$s1-btn-offset-y: -94px;
$s1-btn-width: 266px;
$s1-btn-height: 86px;
$s1-btn-total-width: 582px;
$s1-btn-total-height: 332px;
$s1-btn-image: '../ztimages/csprite.png';
$s1-btn: (0px, 94px, 0px, -94px, 266px, 86px, 582px, 332px, '../ztimages/csprite.png', 's1-btn', );
$s1-play-name: 's1-play';
$s1-play-x: 274px;
$s1-play-y: 0px;
$s1-play-offset-x: -274px;
$s1-play-offset-y: 0px;
$s1-play-width: 140px;
$s1-play-height: 140px;
$s1-play-total-width: 582px;
$s1-play-total-height: 332px;
$s1-play-image: '../ztimages/csprite.png';
$s1-play: (274px, 0px, -274px, 0px, 140px, 140px, 582px, 332px, '../ztimages/csprite.png', 's1-play', );
$s2-btn-h-name: 's2-btn-h';
$s2-btn-h-x: 0px;
$s2-btn-h-y: 188px;
$s2-btn-h-offset-x: 0px;
$s2-btn-h-offset-y: -188px;
$s2-btn-h-width: 228px;
$s2-btn-h-height: 68px;
$s2-btn-h-total-width: 582px;
$s2-btn-h-total-height: 332px;
$s2-btn-h-image: '../ztimages/csprite.png';
$s2-btn-h: (0px, 188px, 0px, -188px, 228px, 68px, 582px, 332px, '../ztimages/csprite.png', 's2-btn-h', );
$s2-btn-name: 's2-btn';
$s2-btn-x: 0px;
$s2-btn-y: 264px;
$s2-btn-offset-x: 0px;
$s2-btn-offset-y: -264px;
$s2-btn-width: 228px;
$s2-btn-height: 68px;
$s2-btn-total-width: 582px;
$s2-btn-total-height: 332px;
$s2-btn-image: '../ztimages/csprite.png';
$s2-btn: (0px, 264px, 0px, -264px, 228px, 68px, 582px, 332px, '../ztimages/csprite.png', 's2-btn', );
$spritesheet-width: 582px;
$spritesheet-height: 332px;
$spritesheet-image: '../ztimages/csprite.png';
$spritesheet-sprites: ($arr-l-h, $arr-l, $arr-r-h, $arr-r, $logo-gf, $s1-btn-h, $s1-btn, $s1-play, $s2-btn-h, $s2-btn, );
$spritesheet: (582px, 332px, '../ztimages/csprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
